apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s

    scrape_configs:
      # Spring Boot Backend
      - job_name: 'spring-boot-backend'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets:
            - 'back-ops-svc.back-ops.svc.cluster.local:8765'
            - 'back-dev-svc.back-dev.svc.cluster.local:8765'
        relabel_configs:
          - source_labels: [__address__]
            action: replace
            target_label: instance

      - job_name: 'node-exporter'
        metrics_path: /metrics
        static_configs:
          - targets:
            - '192.168.56.100:9100'
            - '192.168.56.101:9100'
            - '192.168.56.102:9100'
            - '192.168.56.103:9100'

      - job_name: 'kubernetes-nodes'
        metrics_path: /metrics
        scheme: http
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - source_labels: [__address__]
            action: replace
            target_label: __address__
            regex: (.*):10250
            replacement: ${1}:10255

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        tls_config:
          insecure_skip_verify: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2

