version: 0.2

env:
  variables:
    NEXT_APP_IMAGE_NAME: next-app
    SPRING_APP_IMAGE_NAME: spring-app
    MONGO_DB_IMAGE_NAME: mongo-db
    REPOSITORY_URL1: public.ecr.aws/t7q9p8g1/lotus-maket/next
    REPOSITORY_URL2: public.ecr.aws/t7q9p8g1/lotus-maket/spring
    REPOSITORY_URL3: public.ecr.aws/t7q9p8g1/lotus-market/db

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon Public ECR...
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URL1
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URL2
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URL3
      
  build:
    commands:
      - echo Build started on `date`
      
      # Build next-app
      - echo Building the Docker image for next-app...
      - NEXT_APP_COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - NEXT_APP_IMAGE_TAG=${NEXT_APP_COMMIT_HASH:=latest}
      - docker build -f apps/next-app/Dockerfile -t $NEXT_APP_IMAGE_NAME:$NEXT_APP_IMAGE_TAG ./apps/next-app || { echo "next-app build failed"; exit 1; }
      - docker tag $NEXT_APP_IMAGE_NAME:$NEXT_APP_IMAGE_TAG $REPOSITORY_URL1:$NEXT_APP_IMAGE_TAG
      - docker tag $NEXT_APP_IMAGE_NAME:$NEXT_APP_IMAGE_TAG $REPOSITORY_URL1:latest

      # Build spring-app
      - echo Building the Docker image for spring-app...
      - SPRING_APP_COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - SPRING_APP_IMAGE_TAG=${SPRING_APP_COMMIT_HASH:=latest}
      - docker build -f apps/spring-app/Dockerfile -t $SPRING_APP_IMAGE_NAME:$SPRING_APP_IMAGE_TAG ./apps/spring-app || { echo "spring-app build failed"; exit 1; }
      - docker tag $SPRING_APP_IMAGE_NAME:$SPRING_APP_IMAGE_TAG $REPOSITORY_URL2:$SPRING_APP_IMAGE_TAG
      - docker tag $SPRING_APP_IMAGE_NAME:$SPRING_APP_IMAGE_TAG $REPOSITORY_URL2:latest
      
      # Build mongo-db
      - echo Building the Docker image for mongo-db...
      - MONGO_DB_COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - MONGO_DB_IMAGE_TAG=${MONGO_DB_COMMIT_HASH:=latest}
      - docker build -f apps/mongo-db/Dockerfile -t $MONGO_DB_IMAGE_NAME:$MONGO_DB_IMAGE_TAG ./apps/mongo-db || { echo "mongo-db build failed"; exit 1; }
      - docker tag $MONGO_DB_IMAGE_NAME:$MONGO_DB_IMAGE_TAG $REPOSITORY_URL3:$MONGO_DB_IMAGE_TAG
      - docker tag $MONGO_DB_IMAGE_NAME:$MONGO_DB_IMAGE_TAG $REPOSITORY_URL3:latest
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      
      # Push next-app image
      - echo "Pushing next-app image $NEXT_APP_IMAGE_NAME:$NEXT_APP_IMAGE_TAG"
      - docker push $REPOSITORY_URL1:$NEXT_APP_IMAGE_TAG || { echo "Failed to push next-app image"; exit 1; }
      - docker push $REPOSITORY_URL1:latest || { echo "Failed to push next-app image"; exit 1; }
  
      # Push spring-app image
      - echo "Pushing spring-app image $SPRING_APP_IMAGE_NAME:$SPRING_APP_IMAGE_TAG"
      - docker push $REPOSITORY_URL2:$SPRING_APP_IMAGE_TAG || { echo "Failed to push spring-app image"; exit 1; }
      - docker push $REPOSITORY_URL2:latest || { echo "Failed to push spring-app image"; exit 1; }

      # Push mongo-db image
      - echo "Pushing mongo-db image $MONGO_DB_IMAGE_NAME:$MONGO_DB_IMAGE_TAG"
      - docker push $REPOSITORY_URL3:$MONGO_DB_IMAGE_TAG || { echo "Failed to push mongo-db image"; exit 1; }
      - docker push $REPOSITORY_URL3:latest || { echo "Failed to push mongo-db image"; exit 1; }
      
artifacts:
  files:
    - '**/*'
